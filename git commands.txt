git config --global user.name "YOUR NAME"
git config --global user.email "YOUR EMAIL ADDRESS"
ssh-keygen -t rsa -C "your_email@example.com"
ssh-agent -s
# Agent pid 59566
ssh-add ~/.ssh/id_rsa

50815@sistemas.frc.utn.edu.ar


git clone https://github.com/frcutngrupo9/sigmaproject.git
cd sigmaproject/
git status
(si no es master, por ej [(146e2eb...)]>)
git checkout master

(simpre deberiamos estar en master)

-para crear el ssh:
ssh-keygen -t rsa -C "50815@sistemas.frc.utn.edu.ar"


pull sin pisar los cambios:
1) cd "CARPETA DEL REPO"
2) git stash (guarda por separado los cambios en la maquina)
3) Checkear si estas en master, si no estas haces: git checkout master
---git pull
4) git stash pop (vuelve a juntar los cambios de la maquina con el repo actualizado"

______________
pushear:
antes de pushear hay que hacer clic derecho en el proyecto y seleccionar clean compiled files

cd "CARPETA DEL REPO"
git add * (asterisco si se carga todo, sino el path del archivo a cargar)
git commit -m "MENSAJE DE COMMIT"

     git fetch -p (sincroniza branch local con la remota para ver si estan actualizadas)
     git pull --rebase (solo si la branch local y remota no estan actualizadad)

git push

va a pedir el user: (es el mail)
y la clave: Final2010

—————————————
 
sobreescribir todo el local con el remoto
git fetch --all
git reset --hard origin/master
 
git fetch downloads the latest from remote without trying to merge or rebase anything. Then the git reset resets the master branch to what you just fetched.\
 
git push -f // push & override
Note that this will blow away other people's code. 